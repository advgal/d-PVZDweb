user nginx nginx;
# worker_processes  1
error_log /var/log/nginx/error.log;
pid       /var/log/nginx/nginx.pid;
worker_rlimit_nofile 1024;

events {
  worker_connections  1024;  ## Default: 1024
}

http {
  include mime.types;
  server_names_hash_bucket_size 64;
  log_format combinedWithHost '$remote_addr - [$time_local]  '
                              '"$request" $status $body_bytes_sent '
                              '"$http_referer" "$http_user_agent" "$http_host"';
  access_log /var/log/nginx/access.log combinedWithHost;

  gzip  on;
  proxy_read_timeout 1800;

  upstream app_server {
    server localhost:8000;
    #server unix:/tmp/gunicorn.sock fail_timeout=0;
  }

  upstream sig_proxy {
    server localhost:8001;
  }

  server {
    listen       8080;
    server_name mdreg.test.portalverbund.gv.at;
    server_name localhost;
    # Use variables for docker - (proxy_redirect requires hard-coded mapping with vars)
    #resolver 127.0.0.11 valid=30s;
    #set $pvzdweb_fqdn localhost:8000;
    #set $sigproxy_fqdn localhost:8001;

    location /static/ {
      root /opt/pvzdweb/static/static/;
    }

    location / {
      proxy_pass http://app_server;
      proxy_redirect default;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Proto https;
      #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /admin/ {
      proxy_pass http://app_server;
      proxy_redirect default;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Proto https;
      #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /sigproxyapi/ {
      # I need this location, otherwise /SigProxy would match
      proxy_pass http://app_server;
      #proxy_redirect default;
      #proxy_redirect localhost:8000/sigproxyapi/ http://localhost:8080/sigproxyapi/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Proto https;
      #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /SigProxy/ {
      proxy_pass http://sig_proxy;
      proxy_redirect default;
      #proxy_redirect $sigproxy_fqdn/ http://localhost:8080/;
      #proxy_set_header Host $host; # needed if backend services uses vhost
      #proxy_set_header X-Forwarded-Host $host;
      #proxy_set_header X-Forwarded-Proto https;
      #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }

  server {
    # if no Host match, close the connection to prevent host spoofing
    listen 8080 default_server;
    return 444;
  }
}
